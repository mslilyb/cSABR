#!/usr/bin/env python3

import argparse
import os
import runners
import watchdogs
import sys

#############
# FUNCTIONS #
#############

# Finds path to executable. Do I need to do this? Returns path to pybakeoff dir.
def mappath():
	spath = os.path.abspath(__file__)
	spath = spath.split("/")[:-1]
	spath = "/".join(spath)
	return spath

# Creates temporary files, unzipping archives as necessary. Needed for IPC?
# Removes any existing ones first. Returns path to tempfile.
def createtempfile(infile, d, outfile):
	dest = d + "/" + outfile

	if os.path.isfile(dest):
		os.unlink(dest)

	if infile.endswith('.gz'): fp = gzip.open(infile, mode='rt')
	else:					   fp = open(infile, mode='r')

	with open(dest, mode='w') as ofp:
		for line in fp:
			ofp.write(line)
		fp.close()

	return dest

##########
# PARSER #
##########

# Main script parser
parser = argparse.ArgumentParser(description=f'python3 implementation of \
	bakeoff control.')

# Required positional arguments
parser.add_argument('dna', type=str, metavar='<fasta file>', help='path \
	to genome in fasta format.')
parser.add_argument('ftx', type=str, metavar='<ftx file>', help='path to \
	reads file in .ftx format.')
parser.add_argument('dir', type=str, metavar='<directory>', help='name of \
	desired output directory')

# Optional positional arguments
parser.add_argument('programs', default='all', nargs='*', \
	metavar='<programs>', help='Specify desired programs to use in bakeoff.\
	 Default behavior is to use all of them.')

# Options
parser.add_argument('-p', '--processors', required=False, default=1, \
	type=int, metavar='<count>', help='Number of \
	processors to use for programs that support multiprocessing. Default: \
	[%(default)s]')
parser.add_argument('-s', '--seed', required=False, default=None, \
	type=int, metavar='<random seed>', help='Random seed for \
	reproducibility. Default: [%(default)s]')

# On/Off flags
parser.add_argument('-t', action='store_true', help='Enable testing mode, \
	which uses only 1/10th of the gene and input files.')
parser.add_argument('-m', '--md5', action='store_true', help='Perform md5 \
	checksums on data and *.ftx.gz files')
parser.add_argument('-f', action='store_true', help='Force overwrite of \
	any existing files. Normal behavior is skipping them.')
parser.add_argument('-d', action='store_true', help='Enable debug mode, \
	keeping temporary files.')
parser.add_argument('-y', '--dry', action='store_true', help='Do a dry run. \
	Prints steps that would be taken')

#########
# SETUP #
#########

# Establish working directory. Do I need to do this? Maybe not when no IPC.
basepath = mappath()
srcpath = basepath + "/src"

# Harvest Input
args = parser.parse_args()

# Enable Stack Trace
'''
if args.d:
	sys.settrace()
'''
# Init output directory
os.makedirs(args.dir, exist_ok=True)

# Create Run object

bakeoff = runners.Run(args)

# Run tests

bakeoff.do_run()
bakeoff.makeclean()